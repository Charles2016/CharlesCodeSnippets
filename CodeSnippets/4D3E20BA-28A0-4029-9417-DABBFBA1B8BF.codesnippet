<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>sAddCollectionView</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>var dataArray: NSMutableArray?
var collectionView: UICollectionView?

override func viewDidLoad() {
    super.viewDidLoad()
    let layout = UICollectionViewFlowLayout.init()
    layout.itemSize = CGSize.init(width: 80, height: 80)
    layout.minimumLineSpacing = 10
    layout.minimumInteritemSpacing = 10
    layout.sectionInset = UIEdgeInsets.init(top: 10, left: 10, bottom: 10, right: 10)
    
    collectionView = UICollectionView.init(frame: .zero, collectionViewLayout: layout)
    collectionView?.backgroundColor = UIColor.white
    collectionView?.delegate = self
    collectionView?.dataSource = self
    collectionView?.register(CollectionViewCell.self, forCellWithReuseIdentifier: "cellId")
    self.view.addSubview(collectionView!)
    collectionView?.snp.makeConstraints({ (make) in
        make.edges.equalTo(self.view)
    })
    
}
override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}
}

//MARK:- collectionView的数据源和代理方法
extension testname: UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout {
    func numberOfSections(in collectionView: UICollectionView) -&gt; Int {
        return 5
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -&gt; Int {
        return 9
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cellId", for: indexPath)
        cell.backgroundColor = kColorRed
        return cell
    }
    
    /*
     //这个是设定header和footer的方法，根据kind不同进行不同的判断即可
     func collectionView(_ collectionView: UICollectionView, viewForSupplementaryElementOfKind kind: String, at indexPath: IndexPath) -&gt; UICollectionReusableView {
     if kind == "UICollectionElementKindSectionHeader" {
     let resuableView = collectionView.dequeueReusableSupplementaryView(ofKind: "UICollectionElementKindSectionHeader", withReuseIdentifier: "header", for: indexPath)
     resuableView.backgroundColor = UIColor.red
     return resuableView
     } else {
     let resuableView = collectionView.dequeueReusableSupplementaryView(ofKind: "UICollectionElementKindSectionFooter", withReuseIdentifier: "footer", for: indexPath)
     resuableView.backgroundColor = UIColor.blue
     return resuableView
     }
     }
     
     //header高度
     func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, referenceSizeForHeaderInSection section: Int) -&gt; CGSize {
     return CGSize.init(width: UIScreen.main.bounds.size.width, height: UIScreen.main.bounds.size.height*0.1)
     }
     
     //footer高度
     func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, referenceSizeForFooterInSection section: Int) -&gt; CGSize {
     return CGSize.init(width: UIScreen.main.bounds.size.width, height: UIScreen.main.bounds.size.height*0.1)
     }*/
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>4D3E20BA-28A0-4029-9417-DABBFBA1B8BF</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>sAddCollectionView</string>
	<key>IDECodeSnippetTitle</key>
	<string>sAddCollectionView</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>

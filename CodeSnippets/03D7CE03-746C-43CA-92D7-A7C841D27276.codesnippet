<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>addCollectionVC</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>@interface DownloadVC ()&lt;UICollectionViewDelegate, UICollectionViewDataSource&gt; {
    UICollectionView *_collectionView;
    NSMutableArray *_dataArray;
}

@end

@implementation DownloadVC

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self loadData];
    [self setUI];
}

- (void)setUI {
    UICollectionViewFlowLayout *layout = [[UICollectionViewFlowLayout alloc]init];
    CGFloat itemW = (kScreenWidth - 2) / 3;
    layout.itemSize = CGSizeMake(itemW, itemW * 1.5);
    layout.minimumLineSpacing = 1;
    layout.minimumInteritemSpacing = 1;
    layout.headerReferenceSize = CGSizeMake(kScreenWidth, kNavigationHeight + 20 + 100 + 90 + 44);
    _collectionView = [[UICollectionView alloc]initWithFrame:CGRectMake(kScreenWidth, 0, kScreenWidth, kScreenHeight) collectionViewLayout:layout];
    _collectionView.dataSource = self;
    _collectionView.delegate = self;
    _collectionView.backgroundColor = kColorWhite;
    [_collectionView registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:@"itemId"];
    [_collectionView registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"header"];
    [self.view addSubview:_collectionView];
}

- (void)loadData {
    _dataArray = [NSMutableArray arrayWithCapacity:0];
    for (int j = 0; j &lt; 2; j++) {
        NSMutableArray *temp = [NSMutableArray arrayWithCapacity:0];
        for (int i = 0; i &lt; 5; i++) {
            
        }
        [_dataArray addObject:temp];
    }
    
}

#pragma mark - UICollectionViewDelegate &amp;&amp; UICollectionViewDataSource
//返回分区个数
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView {
    return 1;
}

//返回每个分区的item个数
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return 10;
}

//返回每个item
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    UICollectionViewCell *cell  = [collectionView dequeueReusableCellWithReuseIdentifier:@"itemId" forIndexPath:indexPath];
    return cell;
}

// 点击item
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    [collectionView deselectItemAtIndexPath:indexPath animated:YES];
    
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>03D7CE03-746C-43CA-92D7-A7C841D27276</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetTitle</key>
	<string>addCollectionVC</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
